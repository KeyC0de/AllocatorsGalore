Visual Leak Detector Version 2.5.1 installed.
    Outputting the report to the debugger and to C:\Users\Nikos\Documents\Visual_Studio_Projects\Allocators\ObjectPool\memory_leak_report.txt
WARNING: Visual Leak Detector detected memory leaks!
---------- Block 139 at 0x000000002825FBA0: 12824 bytes ----------
  Leak Hash: 0xB74E56D0, Count: 1, Total 12824 bytes
  Call Stack (TID 11740):
    ntdll.dll!RtlAllocateHeap()
    d:\agent\_work\2\s\src\vctools\crt\vcstartup\src\heap\new_array.cpp (29): ObjectPool.exe!operator new[]()
    c:\users\nikos\documents\visual_studio_projects\allocators\objectpool\object_pool.cpp (84): ObjectPool.exe!elvenFunc() + 0x3A bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\future (556): ObjectPool.exe!std::_Packaged_state<int __cdecl(void)>::_Call_immediate() + 0x12 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\functional (16707566): ObjectPool.exe!std::_Func_impl_no_alloc<<lambda_052e919cc0e5399df76dff3972c0cac1>,unsigned char>::_Do_call() + 0xF bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (3537): ObjectPool.exe!Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>::_Init() + 0x6E bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (1465): ObjectPool.exe!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_TaskProcHandle>::invoke() + 0x8 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (160): ObjectPool.exe!Concurrency::details::_TaskProcHandle::_RunChoreBridge() + 0xB bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (51): ObjectPool.exe!Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback() + 0xA bytes
    d:\agent\_work\2\s\src\vctools\crt\crtw32\stdcpp\thr\taskscheduler.cpp (158): ObjectPool.exe!Concurrency::details::`anonymous namespace'::_Task_scheduler_callback() + 0x2C bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x3397 bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x17B7 bytes
    KERNEL32.DLL!BaseThreadInitThunk() + 0x22 bytes
    ntdll.dll!RtlUserThreadStart() + 0x34 bytes
  Data:
    D8 FB 25 28    D4 00 00 00    E6 00 00 00    64 00 00 00     ..%(.... ....d...
    00 00 00 00    00 00 00 00    00 D2 25 28    D4 00 00 00     ........ ..%(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    0F 00 00 00    00 00 00 00    10 FC 25 28    D4 00 00 00     ........ ..%(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    48 FC 25 28    D4 00 00 00    00 00 00 00    00 00 00 00     H.%(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    80 FC 25 28    D4 00 00 00     ........ ..%(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    B8 FC 25 28    D4 00 00 00    00 00 00 00    00 00 00 00     ..%(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........


---------- Block 150 at 0x00000000282652D0: 14336 bytes ----------
  Leak Hash: 0xB273C171, Count: 1, Total 14336 bytes
  Call Stack (TID 11928):
    ntdll.dll!RtlAllocateHeap()
    d:\agent\_work\2\s\src\vctools\crt\vcstartup\src\heap\new_array.cpp (29): ObjectPool.exe!operator new[]()
    c:\users\nikos\documents\visual_studio_projects\allocators\objectpool\object_pool.cpp (97): ObjectPool.exe!dwarvenFunc() + 0x39 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\future (556): ObjectPool.exe!std::_Packaged_state<int __cdecl(void)>::_Call_immediate() + 0x12 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\functional (16707566): ObjectPool.exe!std::_Func_impl_no_alloc<<lambda_052e919cc0e5399df76dff3972c0cac1>,unsigned char>::_Do_call() + 0xF bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (3537): ObjectPool.exe!Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>::_Init() + 0x6E bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (1465): ObjectPool.exe!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_TaskProcHandle>::invoke() + 0x8 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (160): ObjectPool.exe!Concurrency::details::_TaskProcHandle::_RunChoreBridge() + 0xB bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (51): ObjectPool.exe!Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback() + 0xA bytes
    d:\agent\_work\2\s\src\vctools\crt\crtw32\stdcpp\thr\taskscheduler.cpp (158): ObjectPool.exe!Concurrency::details::`anonymous namespace'::_Task_scheduler_callback() + 0x2C bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x3397 bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x17B7 bytes
    KERNEL32.DLL!BaseThreadInitThunk() + 0x22 bytes
    ntdll.dll!RtlUserThreadStart() + 0x34 bytes
  Data:
    08 53 26 28    D4 00 00 00    FC 00 00 00    64 00 00 00     .S&(.... ....d...
    00 00 00 00    00 00 00 00    00 8D 25 28    D4 00 00 00     ........ ..%(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    0F 00 00 00    00 00 00 00    40 53 26 28    D4 00 00 00     ........ @S&(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    78 53 26 28    D4 00 00 00    00 00 00 00    00 00 00 00     xS&(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    B0 53 26 28    D4 00 00 00     ........ .S&(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    E8 53 26 28    D4 00 00 00    00 00 00 00    00 00 00 00     .S&(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........


---------- Block 171 at 0x000000002826B2B0: 12824 bytes ----------
  Leak Hash: 0xB74E56D0, Count: 1, Total 12824 bytes
  Call Stack (TID 7720):
    ntdll.dll!RtlAllocateHeap()
    d:\agent\_work\2\s\src\vctools\crt\vcstartup\src\heap\new_array.cpp (29): ObjectPool.exe!operator new[]()
    c:\users\nikos\documents\visual_studio_projects\allocators\objectpool\object_pool.cpp (84): ObjectPool.exe!elvenFunc() + 0x3A bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\future (556): ObjectPool.exe!std::_Packaged_state<int __cdecl(void)>::_Call_immediate() + 0x12 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\functional (16707566): ObjectPool.exe!std::_Func_impl_no_alloc<<lambda_052e919cc0e5399df76dff3972c0cac1>,unsigned char>::_Do_call() + 0xF bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (3537): ObjectPool.exe!Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>::_Init() + 0x6E bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (1465): ObjectPool.exe!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_TaskProcHandle>::invoke() + 0x8 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (160): ObjectPool.exe!Concurrency::details::_TaskProcHandle::_RunChoreBridge() + 0xB bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (51): ObjectPool.exe!Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback() + 0xA bytes
    d:\agent\_work\2\s\src\vctools\crt\crtw32\stdcpp\thr\taskscheduler.cpp (158): ObjectPool.exe!Concurrency::details::`anonymous namespace'::_Task_scheduler_callback() + 0x2C bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x3397 bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x17B7 bytes
    KERNEL32.DLL!BaseThreadInitThunk() + 0x22 bytes
    ntdll.dll!RtlUserThreadStart() + 0x34 bytes
  Data:
    E8 B2 26 28    D4 00 00 00    E6 00 00 00    64 00 00 00     ..&(.... ....d...
    00 00 00 00    00 00 00 00    00 CA 25 28    D4 00 00 00     ........ ..%(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    0F 00 00 00    00 00 00 00    20 B3 26 28    D4 00 00 00     ........ ..&(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    58 B3 26 28    D4 00 00 00    00 00 00 00    00 00 00 00     X.&(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    90 B3 26 28    D4 00 00 00     ........ ..&(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    C8 B3 26 28    D4 00 00 00    00 00 00 00    00 00 00 00     ..&(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........


---------- Block 183 at 0x00000000282705A0: 14336 bytes ----------
  Leak Hash: 0xB273C171, Count: 1, Total 14336 bytes
  Call Stack (TID 12012):
    ntdll.dll!RtlAllocateHeap()
    d:\agent\_work\2\s\src\vctools\crt\vcstartup\src\heap\new_array.cpp (29): ObjectPool.exe!operator new[]()
    c:\users\nikos\documents\visual_studio_projects\allocators\objectpool\object_pool.cpp (97): ObjectPool.exe!dwarvenFunc() + 0x39 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\future (556): ObjectPool.exe!std::_Packaged_state<int __cdecl(void)>::_Call_immediate() + 0x12 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\functional (16707566): ObjectPool.exe!std::_Func_impl_no_alloc<<lambda_052e919cc0e5399df76dff3972c0cac1>,unsigned char>::_Do_call() + 0xF bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (3537): ObjectPool.exe!Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>::_Init() + 0x6E bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\ppltasks.h (1465): ObjectPool.exe!Concurrency::details::_PPLTaskHandle<unsigned char,Concurrency::task<unsigned char>::_InitialTaskHandle<void,<lambda_4fbe9631f06acbc3601e97a6bc4d7592>,Concurrency::details::_TypeSelectorNoAsync>,Concurrency::details::_TaskProcHandle>::invoke() + 0x8 bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (160): ObjectPool.exe!Concurrency::details::_TaskProcHandle::_RunChoreBridge() + 0xB bytes
    c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\pplwin.h (51): ObjectPool.exe!Concurrency::details::_DefaultPPLTaskScheduler::_PPLTaskChore::_Callback() + 0xA bytes
    d:\agent\_work\2\s\src\vctools\crt\crtw32\stdcpp\thr\taskscheduler.cpp (158): ObjectPool.exe!Concurrency::details::`anonymous namespace'::_Task_scheduler_callback() + 0x2C bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x3397 bytes
    ntdll.dll!RtlFreeUnicodeString() + 0x17B7 bytes
    KERNEL32.DLL!BaseThreadInitThunk() + 0x22 bytes
    ntdll.dll!RtlUserThreadStart() + 0x34 bytes
  Data:
    D8 05 27 28    D4 00 00 00    FC 00 00 00    64 00 00 00     ..'(.... ....d...
    00 00 00 00    00 00 00 00    00 8A 25 28    D4 00 00 00     ........ ..%(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    0F 00 00 00    00 00 00 00    10 06 27 28    D4 00 00 00     ........ ..'(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    48 06 27 28    D4 00 00 00    00 00 00 00    00 00 00 00     H.'(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    80 06 27 28    D4 00 00 00     ........ ..'(....
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........
    B8 06 27 28    D4 00 00 00    00 00 00 00    00 00 00 00     ..'(.... ........
    00 00 00 00    00 00 00 00    00 00 00 00    00 00 00 00     ........ ........


Visual Leak Detector detected 4 memory leaks (54528 bytes).
Largest number used: 93391 bytes.
Total allocations: 282957 bytes.
Visual Leak Detector is now exiting.
